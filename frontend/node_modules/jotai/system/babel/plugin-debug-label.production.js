System.register(["path","@babel/template"],function(u){"use strict";var a,r;return{setters:[function(n){a=n.default},function(n){r=n.default}],execute:function(){u("default",f);function n(t,i,e=[]){if(t.isIdentifier(i)&&d.includes(i.name))return!0;if(t.isMemberExpression(i)){const{property:o}=i;if(t.isIdentifier(o)&&[...d,...e].includes(o.name))return!0}return!1}const d=["abortableAtom","atom","atomFamily","atomWithDefault","atomWithHash","atomWithImmer","atomWithInfiniteQuery","atomWithMachine","atomWithMutation","atomWithObservable","atomWithProxy","atomWithQuery","atomWithReducer","atomWithReset","atomWithSubscription","atomWithStorage","atomWithStore","freezeAtom","loadable","selectAtom","splitAtom"],c=r.default||r;function f({types:t},i){return{visitor:{ExportDefaultDeclaration(e,o){const{node:s}=e;if(t.isCallExpression(s.declaration)&&n(t,s.declaration.callee,i==null?void 0:i.customAtomNames)){const m=o.filename||"unknown";let l=a.basename(m,a.extname(m));l==="index"&&(l=a.basename(a.dirname(m)));const h=c(`
          const %%atomIdentifier%% = %%atom%%;
          export default %%atomIdentifier%%
          `)({atomIdentifier:t.identifier(l),atom:s.declaration});e.replaceWithMultiple(h)}},VariableDeclarator(e){t.isIdentifier(e.node.id)&&t.isCallExpression(e.node.init)&&n(t,e.node.init.callee,i==null?void 0:i.customAtomNames)&&e.parentPath.insertAfter(t.expressionStatement(t.assignmentExpression("=",t.memberExpression(t.identifier(e.node.id.name),t.identifier("debugLabel")),t.stringLiteral(e.node.id.name))))}}}}}}});
