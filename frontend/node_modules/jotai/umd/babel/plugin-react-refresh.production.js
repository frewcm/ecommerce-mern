!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@babel/template")):"function"==typeof define&&define.amd?define(["exports","@babel/template"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["jotaiPlugin-react-refresh"]={},e._templateBuilder)}(this,(function(e,t){"use strict";function a(e,t,a){if(void 0===a&&(a=[]),e.isIdentifier(t)&&i.includes(t.name))return!0;if(e.isMemberExpression(t)){var n=t.property;if(e.isIdentifier(n)&&[].concat(i,a).includes(n.name))return!0}return!1}var i=["abortableAtom","atom","atomFamily","atomWithDefault","atomWithHash","atomWithImmer","atomWithInfiniteQuery","atomWithMachine","atomWithMutation","atomWithObservable","atomWithProxy","atomWithQuery","atomWithReducer","atomWithReset","atomWithSubscription","atomWithStorage","atomWithStore","freezeAtom","loadable","selectAtom","splitAtom"],n=t.default||t;e.default=function(e,t){var i=e.types;return{pre:function(e){if(!e.opts.filename)throw new Error("Filename must be available")},visitor:{Program:{exit:function(e){var t=n("\n          globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {\n            cache: new Map(),\n            get(name, inst) { \n              if (this.cache.has(name)) {\n                return this.cache.get(name)\n              }\n              this.cache.set(name, inst)\n              return inst\n            },\n          }")();e.unshiftContainer("body",t)}},ExportDefaultDeclaration:function(e,o){var r=e.node;if(i.isCallExpression(r.declaration)&&a(i,r.declaration.callee,null==t?void 0:t.customAtomNames)){var l=(o.filename||"unknown")+"/defaultExport",m=n("export default globalThis.jotaiAtomCache.get(%%atomKey%%, %%atom%%)")({atomKey:i.stringLiteral(l),atom:r.declaration});e.replaceWith(m)}},VariableDeclarator:function(e,o){var r,l;if(i.isIdentifier(e.node.id)&&i.isCallExpression(e.node.init)&&a(i,e.node.init.callee,null==t?void 0:t.customAtomNames)&&(null!=(r=e.parentPath.parentPath)&&r.isProgram()||null!=(l=e.parentPath.parentPath)&&l.isExportNamedDeclaration())){var m=(o.filename||"unknown")+"/"+e.node.id.name,s=n("const %%atomIdentifier%% = globalThis.jotaiAtomCache.get(%%atomKey%%, %%atom%%)")({atomIdentifier:i.identifier(e.node.id.name),atomKey:i.stringLiteral(m),atom:e.node.init});e.parentPath.replaceWith(s)}}}}},Object.defineProperty(e,"__esModule",{value:!0})}));
